{"version":3,"sources":["component/contsctList/ContsctList.jsx","component/form/Form.jsx","component/filter/Filter.jsx","component/App.js","index.js"],"names":["ContsctList","contacts","deleteContact","map","contact","name","number","id","onClick","Form","state","inputHandler","e","target","value","setState","submitHandler","preventDefault","props","addContact","onSubmit","this","onChange","type","pattern","title","required","Component","Filter","filterHandler","filter","App","getFilterContact","toLocaleLowerCase","includes","el","prevState","uuid","prevProps","console","log","localStorage","setItem","JSON","stringify","newContacts","parse","getItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAceA,EAZK,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,cAC5B,OACI,6BACKD,EAASE,KAAI,SAACC,GAAD,OACV,+BACI,8BAAIA,EAAQC,KAAZ,IAAmBD,EAAQE,UAC3B,wBAAQC,GAAIH,EAAQG,GAAIC,QAAUN,EAAlC,sBAFKE,EAAQG,U,eCJZE,E,4MACjBC,MAAQ,CACHL,KAAM,GACPC,OAAQ,I,EAGZK,aAAe,SAACC,GAChB,MAAwBA,EAAEC,OAAlBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBV,EAAOS,K,EAExBE,cAAgB,SAACJ,GACjBA,EAAEK,iBACF,EAAKC,MAAMC,WAAW,EAAKT,Q,4CAE3B,WACI,OACG,uBAAMU,SAAUC,KAAKL,cAArB,UACD,yCAAW,uBACTM,SAAUD,KAAKV,aACfY,KAAK,OACHlB,KAAK,OAEPmB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGR,wCAEF,uBACEJ,SAAUD,KAAKV,aACfY,KAAK,MACLlB,KAAK,SACLmB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAEV,wBAAQH,KAAK,SAAb,wB,GArCwBI,aCAnB,SAASC,EAAT,GAAyC,IAAxBC,EAAuB,EAAvBA,cAAcC,EAAS,EAATA,OAC1C,OACI,yCACA,uBACIhB,MAASgB,EACTR,SAAUO,O,ICDDE,E,4MACnBrB,MAAQ,CACNT,SAAU,CACR,CAAEM,GAAI,OAAQF,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEC,GAAI,OAAQF,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEC,GAAI,OAAQF,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEC,GAAI,OAAQF,KAAM,iBAAkBC,OAAQ,cAGhDwB,OAAQ,I,EAEVD,cAAgB,SAACjB,GACf,IAAQE,EAAUF,EAAEC,OAAZC,MACR,EAAKC,SAAS,CAAEe,OAAQhB,K,EAG1BkB,iBAAmB,WACjB,OAAO,EAAKtB,MAAMT,SAAS6B,QAAO,SAAC1B,GAAD,OAChCA,EAAQC,KACL4B,oBACAC,SAAS,EAAKxB,MAAMoB,OAAOG,yB,EAIlC/B,cAAgB,SAACU,GACf,IAAQL,EAAOK,EAAEC,OAATN,GACR,EAAKQ,SAAS,CACZd,SAAU,EAAKS,MAAMT,SAAS6B,QAAO,SAACK,GAAD,OAAQA,EAAG5B,KAAOA,Q,EAI3DY,WAAa,SAACf,GACZ,EAAKW,UAAS,SAACqB,GAAD,MAAgB,CAC5BnC,SAAS,GAAD,mBAAMmC,EAAUnC,UAAhB,cAA4BM,GAAI8B,eAAWjC,U,wDAIvD,SAAmBkC,EAAWF,GAC5BG,QAAQC,IAAInB,KAAKX,MAAMT,UACnBoB,KAAKX,MAAMT,WAAamC,EAAUnC,UACpCwC,aAAaC,QAAQ,WAAYC,KAAKC,UAAUvB,KAAKX,MAAMT,a,+BAI/D,WACE,IAAM4C,EAAcF,KAAKG,MAAML,aAAaM,QAAQ,aAChDF,GACFxB,KAAKN,SAAS,CAAEd,SAAU4C,M,oBAI9B,WACE,OACE,gCACE,2CACA,cAAC,EAAD,CAAM1B,WAAYE,KAAKF,aACvB,0CAEA,cAACS,EAAD,CAAQC,cAAeR,KAAKQ,cAAeC,OAAQT,KAAKX,MAAMoB,SAC9D,cAAC,EAAD,CACE7B,SAAUoB,KAAKW,mBACf9B,cAAemB,KAAKnB,uB,GA7DGyB,aCFjCqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5615f42f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ContsctList = ({contacts, deleteContact}) => {\r\n    return (\r\n        <ul>\r\n            {contacts.map((contact) =>\r\n                <li key={contact.id}>\r\n                    <p>{contact.name}:{contact.number}</p>\r\n                    <button id={contact.id} onClick={ deleteContact}>Delete</button>\r\n                </li>)}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ContsctList;","import React, { Component } from 'react'\r\n\r\nexport default class Form extends Component {\r\n    state = {\r\n         name: \"\",\r\n        number: \"\",\r\n    }\r\n\r\n    inputHandler = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n    submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.props.addContact(this.state)\r\n  };\r\n    render() {\r\n        return (\r\n           <form onSubmit={this.submitHandler}>\r\n          <label>Name<input\r\n            onChange={this.inputHandler}\r\n            type=\"text\"\r\n              name=\"name\"\r\n              \r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            /></label>\r\n            \r\n            <label>Tel\r\n             \r\n          <input\r\n            onChange={this.inputHandler}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          /></label>\r\n          <button type=\"submit\">Add</button>\r\n        </form>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Filter({filterHandler,filter}) {\r\n    return (\r\n        <label>find\r\n        <input\r\n            value = {filter}\r\n            onChange={filterHandler} />\r\n        </label>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ContactList from \"./contsctList/ContsctList\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport Form from \"./form/Form\";\r\nimport Filter from \"./filter/Filter\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n\r\n    filter: \"\",\r\n  };\r\n  filterHandler = (e) => {\r\n    const { value } = e.target;\r\n    this.setState({ filter: value });\r\n  };\r\n\r\n  getFilterContact = () => {\r\n    return this.state.contacts.filter((contact) =>\r\n      contact.name\r\n        .toLocaleLowerCase()\r\n        .includes(this.state.filter.toLocaleLowerCase())\r\n    );\r\n  };\r\n\r\n  deleteContact = (e) => {\r\n    const { id } = e.target;\r\n    this.setState({\r\n      contacts: this.state.contacts.filter((el) => el.id !== id),\r\n    });\r\n  };\r\n\r\n  addContact = (contact) => {\r\n    this.setState((prevState) => ({\r\n      contacts: [...prevState.contacts, { id: uuid(), ...contact }],\r\n    }));\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(this.state.contacts);\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const newContacts = JSON.parse(localStorage.getItem(\"contacts\"));\r\n    if (newContacts) {\r\n      this.setState({ contacts: newContacts });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <Form addContact={this.addContact} />\r\n        <h2>Contacts</h2>\r\n\r\n        <Filter filterHandler={this.filterHandler} filter={this.state.filter} />\r\n        <ContactList\r\n          contacts={this.getFilterContact()}\r\n          deleteContact={this.deleteContact}\r\n        ></ContactList>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./component/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}